
MULTIPLAYER FRAMEWORKS:
opt 1: game library (ex: unity, phaser, etc....)
benefit: integrates well if i make a game


sending data between browers is easy...
problem: how to pair users up?
probably a solution

http://socket.io/get-started/chat/
^^ good tutorial

http://rawkes.com/articles/creating-a-real-time-multiplayer-game-with-websockets-and-node.html
search for websocket libraries?

http://code.tutsplus.com/tutorials/build-a-real-time-chat-application-with-modulus-and-python--cms-24462




http://fuseinteractive.ca/blog/automating-bower-library-integration-grunt#.V7yB9ZgrLIU

BROWSERIFY:
http://browserify.org/index.html
https://www.npmjs.com/package/grunt-browserify
https://www.npmjs.com/package/auto-require
(looks useful, but irc people said not to use ^)
https://github.com/substack/node-browserify
https://blog.gaya.ninja/articles/better-javascript-dependency-management-with-browserify/


https://www.npmjs.com/package/watchify

https://github.com/gruntjs/grunt-contrib-concat/issues/23

  // Remove previous marked elements and mark
  // the new keyword inside the context
  markInstance.unmark().mark(keyword, options);
  markInstance.mark('a',{className:'Blarg'});

.Blarg{
  background: #80ff80;
}

    <script   src="https://code.jquery.com/jquery-3.1.0.slim.min.js"   integrity="sha256-cRpWjoSOw5KcyIOaZNo4i6fZ9tKPhYYb6i5T9RSVJG8="   crossorigin="anonymous"></script>

  <script src="regex-colorizer.min.js" async></script>
// another option is https://markjs.io/

  <script src="https://cdn.rawgit.com/jbr/jQuery.highlightRegex/master/highlightRegex.min.js" crossorigin="anonymous" async></script>



  	// below would be nice but not needed
 	// https://github.com/slevithan/regex-colorizer
  	// RegexColorizer.addStyleSheet(); // just called once
	// html = RegexColorizer.colorizeText('^regexp? pattern$');
	// // insert html where input is
	// RegexColorizer.colorizeAll(); // param: 'myclass' default 'regex'


module.exports = function(grunt) {

  // Project configuration.
  grunt.initConfig({
    pkg: grunt.file.readJSON('bower.json'),
    bower_concat: {
    all: {
      dest: 'js/bower.js'
    }
  },
  uglify: {
     bower: {
      options: {
        compress: true
      },
      files: {
        'js/bower.min.js': 'js/bower.js'
      }
    }
  }
  });

  grunt.loadNpmTasks('grunt-contrib-concat');
  grunt.loadNpmTasks('grunt-contrib-uglify');
  grunt.loadNpmTasks('grunt-contrib-cssmin');
  grunt.registerTask('default', [
  'bower_concat',
  'uglify:bower'
  ]);

};


merge these libraries?
https://github.com/jonschlinkert/grunt-sync-pkg
https://github.com/bahmutov/grunt-npm2bower-sync
https://github.com/gweax/grunt-sync-json < this is most adavnced
